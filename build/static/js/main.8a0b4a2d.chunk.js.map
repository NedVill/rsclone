{"version":3,"sources":["context/AuthContext.js","pages/HomePage.jsx","pages/BoardPage.jsx","hooks/http.hook.js","pages/AuthPage.jsx","routes.jsx","hooks/auth.hook.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","HomePage","BoardPage","useHttp","useState","error","setError","loading","setLoading","request","useCallback","a","url","method","body","headers","stringifyedBody","JSON","stringify","newHeader","fetch","response","json","data","ok","Error","message","clearErorr","AuthPage","email","password","fullName","form","setForm","auth","useContext","useEffect","console","log","registerHandler","formData","loginHandler","changeHandler","event","target","name","value","Container","Grid","container","direction","justify","alignItems","item","xs","Box","bgcolor","color","p","TextField","label","placeholder","type","onChange","Button","variant","onClick","disabled","useRouts","path","exact","to","storageName","useAuth","setToken","ready","setReady","setUserId","jwtToken","id","localStorage","setItem","parse","getItem","removeItem","App","routes","Provider","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a0b4a2d.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nfunction noop() {}\n\nconst AuthContext = createContext({\n  token: null,\n  userId: null,\n  login: noop,\n  logout: noop,\n  isAuthenticated: false,\n});\n\nexport default AuthContext;\n","import React from 'react';\n\nconst HomePage = () => (\n  <div>\n    <h1>HomePage</h1>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst BoardPage = () => (\n  <div>\n    <h1>BoardPage</h1>\n  </div>\n);\n\nexport default BoardPage;\n","import { useCallback, useState } from 'react';\n\nconst useHttp = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const request = useCallback(async ({\n    url,\n    method = 'GET',\n    body = null,\n    headers = {},\n  }) => {\n    setLoading(true);\n    try {\n      const stringifyedBody = JSON.stringify(body);\n      const newHeader = headers;\n      newHeader['Content-Type'] = 'application/json';\n\n      const response = await fetch(url, { method, body: stringifyedBody, headers: newHeader });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to get data.');\n      }\n\n      setLoading(false);\n\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearErorr = useCallback(() => setError(null), []);\n\n  return {\n    loading,\n    request,\n    error,\n    clearErorr,\n  };\n};\n\nexport default useHttp;\n","import {\n  Box,\n  Container,\n  Grid,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport useHttp from '../hooks/http.hook';\n\nconst AuthPage = () => {\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    fullName: '',\n  });\n\n  const {\n    loading,\n    request,\n    error,\n    clearErorr,\n  } = useHttp();\n\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log(error); // Для обработки ошибки регистрации / входа\n    clearErorr();\n  }, [error, clearErorr]);\n\n  const registerHandler = async () => {\n    try {\n      const formData = {\n        url: 'https://rsclone-back-end.herokuapp.com/api/auth/register',\n        method: 'POST',\n        body: { ...form },\n      };\n      const data = await request(formData);\n      console.log(data.message); // Для обработки ответа что юзер создан\n    } catch (e) {\n      clearErorr();\n    }\n  };\n\n  const loginHandler = async () => {\n    try {\n      const formData = {\n        url: 'https://rsclone-back-end.herokuapp.com/api/auth/login',\n        method: 'POST',\n        body: { ...form },\n      };\n      const { token, userId } = await request(formData);\n      auth.login(token, userId);\n    } catch (e) {\n      clearErorr();\n    }\n  };\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <Container>\n      <h1>Auth page</h1>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={6}>\n          <Box bgcolor=\"green accent-4\" color=\"secondary.contrastText\" p={2}>\n            <TextField\n              label=\"Standard\"\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={changeHandler}\n            />\n            <TextField\n              label=\"Standard\"\n              placeholder=\"Full name\"\n              type=\"text\"\n              name=\"fullName\"\n              onChange={changeHandler}\n            />\n            <TextField\n              label=\"Standard\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={changeHandler}\n            />\n          </Box>\n          <Box>\n            <Button\n              variant=\"contained\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Singup\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={loginHandler}\n              disabled={loading}\n            >\n              Login\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport BoardPage from './pages/BoardPage';\nimport AuthPage from './pages/AuthPage';\n\nconst useRouts = (isAuthenticated) => {\n  if (isAuthenticated) {\n    return (\n      <Switch>\n\n        <Route path=\"/links\" exact>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/create\" exact>\n          <BoardPage />\n        </Route>\n\n        <Redirect to=\"/create\" />\n\n      </Switch>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <AuthPage />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default useRouts;\n","import { useState, useEffect, useCallback } from 'react';\n\nconst storageName = 'userData';\n\nconst useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(storageName, JSON.stringify({ token: jwtToken, userId: id }));\n  }, []);\n\n  const logout = () => {\n    setToken(null);\n    setUserId(null);\n\n    localStorage.removeItem(storageName);\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n    console.log(data);\n    if (data?.token && data?.userId) {\n      login(data.token, data.userId);\n    }\n    setReady(true);\n  }, [login, setReady]);\n\n  return {\n    login,\n    logout,\n    token,\n    userId,\n    ready,\n  };\n};\n\nexport default useAuth;\n","import React, { } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AuthContext from './context/AuthContext';\nimport useRouts from './routes';\nimport useAuth from './hooks/auth.hook';\n\nfunction App() {\n  const {\n    token,\n    login,\n    logout,\n    userId,\n    ready,\n  } = useAuth();\n  /*\n    Тут пока нету бэка если делаем страницу авторизации\n    оставляем значение false, если занимаеся другими, ставим true\n  */\n  const isAuthenticated = !!token;\n\n  const routes = useRouts(isAuthenticated);\n\n  if (!ready) {\n    console.log('loading');\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token, login, logout, userId, isAuthenticated,\n      }}\n    >\n      <Router>\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}